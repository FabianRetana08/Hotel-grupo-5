--######################################
--Secuencia FIDE_ESTADO_TB
CREATE SEQUENCE FIDE_ESTADO_TB_ID_ESTADO_SEQ
START WITH 1
INCREMENT BY 1

/
--Secuencia FIDE_ESTADO_TB_ID_ESTADO con Trigger
CREATE OR REPLACE TRIGGER FIDE_ESTADO_TB_ID_ESTADO_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_ESTADO_TB
FOR EACH ROW
WHEN (NEW.ID_ESTADO IS NULL)
BEGIN
    SELECT FIDE_ESTADO_TB_ID_ESTADO_SEQ.NEXTVAL
    INTO :NEW.ID_ESTADO
    FROM DUAL;
END;
/
--Accion estado
CREATE OR REPLACE TRIGGER FIDE_ESTADO_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_ESTADO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--Auditoria Estado
CREATE OR REPLACE TRIGGER FIDE_ESTADO_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_ESTADO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
    END IF;

    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;

/ 
--######################################

--Secuencia FIDE_TIPO_CLIENTE_TB
CREATE SEQUENCE FIDE_TIPO_CLIENTE_TB_ID_TIPO_CLIENTE_SEQ
START WITH 1
INCREMENT BY 1

/
--ALMACENAR SEQ
CREATE OR REPLACE TRIGGER FIDE_TIPO_CLIENTE_TB_ID_TIPO_CLIENTE_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_TIPO_CLIENTE_TB
FOR EACH ROW
WHEN (NEW.ID_TIPO_CLIENTE IS NULL)
BEGIN
    SELECT FIDE_TIPO_CLIENTE_TB_ID_TIPO_CLIENTE_SEQ.NEXTVAL
    INTO :NEW.ID_TIPO_CLIENTE
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_TIPO_CLIENTE_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_CLIENTE_TB
FOR EACH ROW
BEGIN

    IF :NEW.ID_TIPO_CLIENTE IS NULL THEN
        :NEW.ID_TIPO_CLIENTE := FIDE_TIPO_CLIENTE_TB_ID_TIPO_CLIENTE_SEQ.NEXTVAL;
    END IF;


    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    END IF;

    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--Auditoria
CREATE OR REPLACE TRIGGER FIDE_TIPO_CLIENTE_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_CLIENTE_TB
FOR EACH ROW
BEGIN
 
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
  
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################

--Secuencia FIDE_CLIENTE_TB
CREATE SEQUENCE FIDE_CLIENTE_TB_ID_CLIENTE_SEQ
START WITH 1
INCREMENT BY 1
/
--Almacenar Secuencia
CREATE OR REPLACE TRIGGER FIDE_CLIENTE_TB_ID_CLIENTE_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_CLIENTE_TB
FOR EACH ROW
WHEN (NEW.ID_CLIENTE IS NULL)
BEGIN
    SELECT FIDE_CLIENTE_TB_ID_CLIENTE_SEQ.NEXTVAL
    INTO :NEW.ID_CLIENTE
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_CLIENTE_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_CLIENTE_TB
FOR EACH ROW
BEGIN
  
    IF :NEW.ID_CLIENTE IS NULL THEN
        :NEW.ID_CLIENTE := FIDE_CLIENTE_TB_ID_CLIENTE_SEQ.NEXTVAL;
    END IF;

    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    END IF;

  
    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--AUDITORIA
CREATE OR REPLACE TRIGGER FIDE_CLIENTE_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_CLIENTE_TB
FOR EACH ROW
BEGIN
  
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN

        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################

--Secuencia FIDE_PUESTO_TRABAJO_TB
CREATE SEQUENCE FIDE_PUESTO_TRABAJO_TB_ID_PUESTO_TRABAJO_SEQ
START WITH 1
INCREMENT BY 1
/
-- Almacenar
CREATE OR REPLACE TRIGGER FIDE_PUESTO_TRABAJO_TB_ID_PUESTO_TRABAJO_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_PUESTO_TRABAJO_TB
FOR EACH ROW
WHEN (NEW.ID_PUESTO_TRABAJO IS NULL)
BEGIN
    SELECT FIDE_PUESTO_TRABAJO_TB_ID_PUESTO_TRABAJO_SEQ.NEXTVAL
    INTO :NEW.ID_PUESTO_TRABAJO
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_PUESTO_TRABAJO_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PUESTO_TRABAJO_TB
FOR EACH ROW
BEGIN
  
    IF :NEW.ID_PUESTO_TRABAJO IS NULL THEN
        :NEW.ID_PUESTO_TRABAJO := FIDE_PUESTO_TRABAJO_TB_ID_PUESTO_TRABAJO_SEQ.NEXTVAL;
    END IF;

 
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    END IF;

    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--AUDITORIA
CREATE OR REPLACE TRIGGER FIDE_PUESTO_TRABAJO_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_PUESTO_TRABAJO_TB
FOR EACH ROW
BEGIN
  
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
       
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/
--######################################
--Secuencia FIDE_PROVINCIA_TB
CREATE SEQUENCE FIDE_PROVINCIA_TB_ID_PROVINCIA_SEQ
START WITH 1
INCREMENT BY 1

/
--Almacenar
CREATE OR REPLACE TRIGGER FIDE_PROVINCIA_TB_ID_PROVINCIA_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_PROVINCIA_TB
FOR EACH ROW
WHEN (NEW.ID_PROVINCIA IS NULL)
BEGIN
    SELECT FIDE_PROVINCIA_TB_ID_PROVINCIA_SEQ.NEXTVAL
    INTO :NEW.ID_PROVINCIA
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_PROVINCIA_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVINCIA_TB
FOR EACH ROW
BEGIN
    
    IF :NEW.ID_PROVINCIA IS NULL THEN
        :NEW.ID_PROVINCIA := FIDE_PROVINCIA_TB_ID_PROVINCIA_SEQ.NEXTVAL;
    END IF;

  
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    END IF;

    --
    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--auditoria
CREATE OR REPLACE TRIGGER FIDE_PROVINCIA_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVINCIA_TB
FOR EACH ROW
BEGIN
 
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/
--######################################

--Secuencia FIDE_CANTON_TB
CREATE SEQUENCE FIDE_CANTON_TB_ID_CANTON_SEQ
START WITH 1
INCREMENT BY 1
/
--Almacenar
CREATE OR REPLACE TRIGGER FIDE_CANTON_TB_ID_CANTON_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_CANTON_TB
FOR EACH ROW
WHEN (NEW.ID_CANTON IS NULL)
BEGIN
    SELECT FIDE_CANTON_TB_ID_CANTON_SEQ.NEXTVAL
    INTO :NEW.ID_CANTON
    FROM DUAL;
END;
/
--ACCION
CREATE OR REPLACE TRIGGER FIDE_CANTON_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_CANTON_TB
FOR EACH ROW
BEGIN
   
    IF :NEW.ID_CANTON IS NULL THEN
        :NEW.ID_CANTON := FIDE_CANTON_TB_ID_CANTON_SEQ.NEXTVAL;
    END IF;

    
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    END IF;

  
    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--Auditoria
CREATE OR REPLACE TRIGGER FIDE_CANTON_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_CANTON_TB
FOR EACH ROW
BEGIN
    
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
     
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/
--######################################

--Secuencia FIDE_DISTRITO_TB
CREATE SEQUENCE FIDE_DISTRITO_TB_ID_DISTRITO_SEQ
START WITH 1
INCREMENT BY 1
/
--Almacenar
CREATE OR REPLACE TRIGGER FIDE_DISTRITO_TB_ID_DISTRITO_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_DISTRITO_TB
FOR EACH ROW
WHEN (NEW.ID_DISTRITO IS NULL)
BEGIN
    SELECT FIDE_DISTRITO_TB_ID_DISTRITO_SEQ.NEXTVAL
    INTO :NEW.ID_DISTRITO
    FROM DUAL;
END;
/
--ACCION
CREATE OR REPLACE TRIGGER FIDE_DISTRITO_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_DISTRITO_TB
FOR EACH ROW
BEGIN
    
    IF :NEW.ID_DISTRITO IS NULL THEN
        :NEW.ID_DISTRITO := FIDE_DISTRITO_TB_ID_DISTRITO_SEQ.NEXTVAL;
    END IF;

   
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    END IF;

 
    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--auditoria
CREATE OR REPLACE TRIGGER FIDE_DISTRITO_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_DISTRITO_TB
FOR EACH ROW
BEGIN
   
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
    
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################
--Secuencia FIDE_SUCURSAL_TB
CREATE SEQUENCE FIDE_SUCURSAL_TB_ID_SUCURSAL_SEQ
START WITH 1
INCREMENT BY 1
/
--Almacenar
CREATE OR REPLACE TRIGGER FIDE_SUCURSAL_TB_ID_SUCURSAL_ALMACENAR_TRG
BEFORE INSERT ON FIDE_SUCURSAL_TB
FOR EACH ROW
WHEN (NEW.ID_SUCURSAL IS NULL)
BEGIN
    SELECT FIDE_SUCURSAL_TB_ID_SUCURSAL_SEQ.NEXTVAL
    INTO :NEW.ID_SUCURSAL
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_SUCURSAL_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_SUCURSAL_TB
FOR EACH ROW
BEGIN
    
    IF :NEW.ID_SUCURSAL IS NULL THEN
        :NEW.ID_SUCURSAL := FIDE_SUCURSAL_TB_ID_SUCURSAL_SEQ.NEXTVAL;
    END IF;

   
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    END IF;

    
    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--Auditoria
CREATE OR REPLACE TRIGGER FIDE_SUCURSAL_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_SUCURSAL_TB
FOR EACH ROW
BEGIN
    
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
       
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/
--######################################
--Secuencia FIDE_DIRECCION_TB
--Accion
CREATE OR REPLACE TRIGGER FIDE_DIRECCION_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_DIRECCION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
-- Auditoria
CREATE OR REPLACE TRIGGER FIDE_DIRECCION_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_DIRECCION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################
--Secuencia FIDE_AREA_TRABAJO_TB
CREATE SEQUENCE FIDE_AREA_TRABAJO_TB_ID_AREA_TRABAJO_SEQ
START WITH 1
INCREMENT BY 1
/
--Almacenar
CREATE OR REPLACE TRIGGER FIDE_AREA_TRABAJO_TB_ID_AREA_TRABAJO_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_AREA_TRABAJO_TB
FOR EACH ROW
WHEN (NEW.ID_AREA_TRABAJO IS NULL)
BEGIN
    SELECT FIDE_AREA_TRABAJO_TB_ID_AREA_TRABAJO_SEQ.NEXTVAL
    INTO :NEW.ID_AREA_TRABAJO
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_AREA_TRABAJO_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_AREA_TRABAJO_TB
FOR EACH ROW
BEGIN
    
    IF :NEW.ID_AREA_TRABAJO IS NULL THEN
        :NEW.ID_AREA_TRABAJO := FIDE_AREA_TRABAJO_TB_ID_AREA_TRABAJO_SEQ.NEXTVAL;
    END IF;

    
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    END IF;

    IF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
-- AUDITORIA
CREATE OR REPLACE TRIGGER FIDE_AREA_TRABAJO_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_AREA_TRABAJO_TB
FOR EACH ROW
BEGIN
   
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
      
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/
--######################################
--Secuencia FIDE_EMPLEADO_TB
CREATE SEQUENCE FIDE_EMPLEADO_TB_ID_EMPLEADO_SEQ
START WITH 1
INCREMENT BY 1

--ALMACENAR 
CREATE OR REPLACE TRIGGER FIDE_EMPLEADO_TB_ID_EMPLEADO_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_EMPLEADO_TB
FOR EACH ROW
WHEN (NEW.ID_EMPLEADO IS NULL)
BEGIN
    SELECT FIDE_EMPLEADO_TB_ID_EMPLEADO_SEQ.NEXTVAL
    INTO :NEW.ID_EMPLEADO
    FROM DUAL;
END;
/
--ACCION
CREATE OR REPLACE TRIGGER FIDE_EMPLEADO_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_EMPLEADO_TB
FOR EACH ROW
BEGIN
    -- Si es un nuevo registro (INSERT)
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        -- Si es una actualización (UPDATE)
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/
--Auditoria
CREATE OR REPLACE TRIGGER FIDE_EMPLEADO_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_EMPLEADO_TB
FOR EACH ROW
BEGIN

    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################
--Secuencia FIDE_CATEGORIA_PRODUCTO_TB
CREATE SEQUENCE FIDE_CATEGORIA_PRODUCTO_TB_ID_CATEGORIA_SEQ
START WITH 1
INCREMENT BY 1

/
--ALMACENAR SEQ
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_PRODUCTO_TB_ID_CATEGORIA_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_CATEGORIA_PRODUCTO_TB
FOR EACH ROW
WHEN (NEW.ID_CATEGORIA IS NULL)
BEGIN
    SELECT FIDE_CATEGORIA_PRODUCTO_TB_ID_CATEGORIA_SEQ.NEXTVAL
    INTO :NEW.ID_CATEGORIA
    FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_PRODUCTO_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_CATEGORIA_PRODUCTO_TB
FOR EACH ROW
BEGIN
    IF :NEW.ID_CATEGORIA IS NULL THEN
        :NEW.ID_CATEGORIA := FIDE_CATEGORIA_PRODUCTO_TB_ID_CATEGORIA_SEQ.NEXTVAL;
    END IF;

    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
-- AUDITORIA
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_PRODUCTO_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_CATEGORIA_PRODUCTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################
--Secuencia FIDE_PRODUCTO_TB
CREATE SEQUENCE FIDE_PRODUCTO_TB_ID_PRODUCTO_SEQ
START WITH 1
INCREMENT BY 1

/
-- Almacenar Seq
CREATE OR REPLACE TRIGGER FIDE_PRODUCTO_TB_ID_PRODUCTO_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_PRODUCTO_TB
FOR EACH ROW
WHEN (NEW.ID_PRODUCTO IS NULL)
BEGIN
    SELECT FIDE_PRODUCTO_TB_ID_PRODUCTO_SEQ.NEXTVAL
    INTO :NEW.ID_PRODUCTO
    FROM DUAL;
END;
/
--ACCION
CREATE OR REPLACE TRIGGER FIDE_PRODUCTO_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PRODUCTO_TB
FOR EACH ROW
BEGIN
    IF :NEW.ID_PRODUCTO IS NULL THEN
        :NEW.ID_PRODUCTO := FIDE_PRODUCTO_TB_ID_PRODUCTO_SEQ.NEXTVAL;
    END IF;

    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--AUDITORIA
CREATE OR REPLACE TRIGGER FIDE_PRODUCTO_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_PRODUCTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/
--######################################
--Secuencia FIDE_TIPO_RESERVA_TB
CREATE SEQUENCE FIDE_TIPO_RESERVA_TB_ID_TIPO_RESERVA_SEQ
START WITH 1
INCREMENT BY 1

/
--Almacenar Seq
CREATE OR REPLACE TRIGGER FIDE_TIPO_RESERVA_TB_ID_TIPO_RESERVA_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_TIPO_RESERVA_TB
FOR EACH ROW
WHEN (NEW.ID_TIPO_RESERVA IS NULL)
BEGIN
    SELECT FIDE_TIPO_RESERVA_TB_ID_TIPO_RESERVA_SEQ.NEXTVAL
    INTO :NEW.ID_TIPO_RESERVA
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_TIPO_RESERVA_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_RESERVA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--Auditoria
CREATE OR REPLACE TRIGGER FIDE_TIPO_RESERVA_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_RESERVA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################
--Secuencia FIDE_TIPO_HABITACION_TB
CREATE SEQUENCE FIDE_TIPO_HABITACION_TB_ID_TIPO_HABITACION_SEQ
START WITH 1
INCREMENT BY 1

/
--Almacenar Secuencia
CREATE OR REPLACE TRIGGER FIDE_TIPO_HABITACION_TB_ID_TIPO_HABITACION_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_TIPO_HABITACION_TB
FOR EACH ROW
WHEN (NEW.ID_TIPO_HABITACION IS NULL)
BEGIN
    SELECT FIDE_TIPO_HABITACION_TB_ID_TIPO_HABITACION_SEQ.NEXTVAL
    INTO :NEW.ID_TIPO_HABITACION
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_TIPO_HABITACION_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_HABITACION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--AUDITORIA
CREATE OR REPLACE TRIGGER FIDE_TIPO_HABITACION_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_HABITACION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################
-- FIDE_HABITACION_TB
--#################vALIDAR 
CREATE OR REPLACE TRIGGER FIDE_HABITACION_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_HABITACION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--AUDITORIA
CREATE OR REPLACE TRIGGER FIDE_HABITACION_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_HABITACION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;

/
--######################################
--Secuencia FIDE_RESERVA_TB
CREATE SEQUENCE FIDE_RESERVA_TB_NUM_RESERVA_SEQ
START WITH 1
INCREMENT BY 1
/
-- Almacenar
CREATE OR REPLACE TRIGGER FIDE_RESERVA_TB_NUM_RESERVA_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_RESERVA_TB
FOR EACH ROW
WHEN (NEW.NUM_RESERVA IS NULL)
BEGIN
    SELECT FIDE_RESERVA_TB_NUM_RESERVA_SEQ.NEXTVAL
    INTO :NEW.NUM_RESERVA
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_RESERVA_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_RESERVA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--Auditoria
CREATE OR REPLACE TRIGGER FIDE_RESERVA_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_RESERVA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;

/
--######################################
--Secuencia FIDE_FACTURA_TB
CREATE SEQUENCE FIDE_FACTURA_TB_NUM_FACTURA_SEQ
START WITH 1
INCREMENT BY 1
/
--Almacenar
CREATE OR REPLACE TRIGGER FIDE_FACTURA_TB_NUM_FACTURA_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_FACTURA_TB
FOR EACH ROW
WHEN (NEW.NUM_FACTURA IS NULL)
BEGIN
    SELECT FIDE_FACTURA_TB_NUM_FACTURA_SEQ.NEXTVAL
    INTO :NEW.NUM_FACTURA
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_FACTURA_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_FACTURA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--Auditoria
CREATE OR REPLACE TRIGGER FIDE_FACTURA_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_FACTURA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;

/
--######################################
--Secuencia FIDE_DETALLE_SERVICIO_HABITACION_TB
CREATE SEQUENCE FIDE_DETALLE_SERVICIO_HABITACION_TB_NUM_DETALLE_SERVICIO_SEQ
START WITH 1
INCREMENT BY 1

/
--ALMACENAR
CREATE OR REPLACE TRIGGER FIDE_RESERVA_TB_NUM_RESERVA_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_RESERVA_TB
FOR EACH ROW
WHEN (NEW.NUM_RESERVA IS NULL)
BEGIN
    SELECT FIDE_RESERVA_TB_NUM_RESERVA_SEQ.NEXTVAL
    INTO :NEW.NUM_RESERVA
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_RESERVA_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_RESERVA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/
--AUDITORIA
CREATE OR REPLACE TRIGGER FIDE_RESERVA_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_RESERVA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

--######################################
--Secuencia FIDE_SERVICIO_HABITACION_TB
CREATE SEQUENCE FIDE_SERVICIO_HABITACION_TB_NUM_SERVICIO_HABITACION_SEQ
START WITH 1
INCREMENT BY 1
/
--Almacenar Secuencia
CREATE OR REPLACE TRIGGER FIDE_SERVICIO_HABITACION_TB_NUM_SERVICIO_HABITACION_ALMACENARSEQ_TRG
BEFORE INSERT ON FIDE_SERVICIO_HABITACION_TB
FOR EACH ROW
WHEN (NEW.NUM_SERVICIO_HABITACION IS NULL)
BEGIN
    SELECT FIDE_SERVICIO_HABITACION_TB_NUM_SERVICIO_HABITACION_SEQ.NEXTVAL
    INTO :NEW.NUM_SERVICIO_HABITACION
    FROM DUAL;
END;
/
--Accion
CREATE OR REPLACE TRIGGER FIDE_SERVICIO_HABITACION_TB_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_SERVICIO_HABITACION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'Creación';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'Modificación';
    END IF;
END;
/

--Auditoria
CREATE OR REPLACE TRIGGER FIDE_SERVICIO_HABITACION_TB_AUDITORIA_TRG
BEFORE INSERT OR UPDATE ON FIDE_SERVICIO_HABITACION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREATION_DATE := SYSDATE;
        :NEW.CREATED_BY := USER;
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    ELSIF UPDATING THEN
        :NEW.LAST_UPDATE_DATE := SYSDATE;
        :NEW.LAST_UPDATE_BY := USER;
    END IF;
END;
/

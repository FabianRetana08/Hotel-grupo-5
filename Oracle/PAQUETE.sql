-- Paquete: FIDE_PAQUETE

CREATE OR REPLACE PACKAGE FIDE_PAQUETE IS

    -- Funciones
    FUNCTION FIDE_CLIENTE_TB_OBTENER_NOMBRE_COMPLETO_FN(p_id_cliente NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_CLIENTE_TB_CONTAR_POR_TIPO_FN(p_id_tipo_cliente NUMBER) RETURN NUMBER;
    FUNCTION FIDE_CLIENTE_TB_EXISTE_CORREO_FN(p_email VARCHAR2) RETURN NUMBER;
    FUNCTION FIDE_PUESTO_TRABAJO_TB_OBTENER_SALARIO_FN(p_id_puesto NUMBER) RETURN NUMBER;
    FUNCTION FIDE_PUESTO_TRABAJO_TB_LISTAR_POR_ESTADO_FN(p_id_estado NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_ESTADO_TB_OBTENER_DESCRIPCION_FN(p_id_estado NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_TIPO_CLIENTE_TB_DESCRIPCION_POR_ID_FN(p_id_tipo_cliente NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_PROVINCIA_TB_OBTENER_NOMBRE_FN(p_id_provincia NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_CANTON_TB_OBTENER_NOMBRE_FN(p_id_canton NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_DISTRITO_TB_OBTENER_NOMBRE_FN(p_id_distrito NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_SUCURSAL_TB_OBTENER_EMAIL_FN(p_id_sucursal NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_DIRECCION_TB_OBTENER_COMPLETA_FN(p_id_sucursal NUMBER) RETURN VARCHAR2;
    FUNCTION FIDE_CLIENTE_TB_TELEFONO_POR_ID_FN(p_id_cliente NUMBER) RETURN NUMBER;
    FUNCTION FIDE_CLIENTE_TB_ESTADO_POR_ID_FN(p_id_cliente NUMBER) RETURN NUMBER;
    FUNCTION FIDE_CLIENTE_TB_LISTAR_POR_ESTADO_FN(p_id_estado NUMBER) RETURN VARCHAR2;

    -- Procedimientos (declaraciones)
    --FIDE_ESTADO_TB
    --Insertar FIDE_ESTADO_TB
    PROCEDURE FIDE_ESTADO_TB_INSERTAR_SP (p_id_estado IN NUMBER, p_estado IN VARCHAR2, p_descripcion_estado IN VARCHAR2);
    PROCEDURE FIDE_ESTADO_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR, p_id_estado FIDE_ESTADO_TB.id_estado%type);
    PROCEDURE FIDE_ESTADO_TB_ACTUALIZAR_SP (p_id_estado IN NUMBER, p_estado IN VARCHAR2, p_descripcion_estado IN VARCHAR2);


    --FIDE_TIPO_CLIENTE_TB
    --Insertar FIDE_TIPO_CLIENTE_TB
    PROCEDURE FIDE_TIPO_CLIENTE_TB_INSERTAR_SP (p_id_tipo_cliente IN fide_tipo_cliente_tb.id_tipo_cliente%type, p_descripcion IN fide_tipo_cliente_tb.descripcion%type, p_id_estado IN fide_tipo_cliente_tb.id_estado%type);
    PROCEDURE FIDE_TIPO_CLIENTE_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR, p_id_tipo_cliente fide_tipo_cliente_tb.id_tipo_cliente%type);
    PROCEDURE FIDE_TIPO_CLIENTE_TB_ACTUALIZAR_SP (p_id_tipo_cliente IN NUMBER, p_descripcion IN VARCHAR2, p_id_estado IN NUMBER);



    --FIDE_CLIENTE_TB
    --Insertar FIDE_CLIENTE_TB
    PROCEDURE FIDE_CLIENTE_TB_INSERTAR_SP (p_id_cliente IN NUMBER,p_nombre_cliente IN VARCHAR2,p_primer_apellido IN VARCHAR2,p_segundo_apellido IN VARCHAR2,p_email IN VARCHAR2,p_num_telefono IN NUMBER,p_id_tipo_cliente IN NUMBER,p_id_estado IN NUMBER);
    PROCEDURE FIDE_CLIENTE_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,p_id_cliente in fide_cliente_tb.id_cliente%type);
    PROCEDURE FIDE_CLIENTE_TB_ACTUALIZAR_SP (p_id_cliente IN NUMBER,p_nombre_cliente IN VARCHAR2,p_primer_apellido IN VARCHAR2,p_segundo_apellido IN VARCHAR2,p_email IN VARCHAR2,p_num_telefono IN NUMBER,p_id_tipo_cliente IN NUMBER,p_id_estado IN NUMBER);



    --FIDE_PUESTO_TRABAJO_TB
    --Insertar FIDE_PUESTO_TRABAJO_TB
    PROCEDURE FIDE_PUESTO_TRABAJO_TB_INSERTAR_SP (p_id_puesto_trabajo IN NUMBER,p_nombre IN VARCHAR2,p_descripcion IN VARCHAR2,p_salario IN NUMBER,p_id_estado IN NUMBER);
    PROCEDURE FIDE_PUESTO_TRABAJO_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,p_id_puesto_trabajo in fide_puesto_trabajo_tb.id_puesto_trabajo%type);
    PROCEDURE FIDE_PUESTO_TRABAJO_TB_ACTUALIZAR_SP (p_id_puesto_trabajo IN NUMBER,p_nombre IN VARCHAR2,p_descripcion IN VARCHAR2,p_salario IN NUMBER,p_id_estado IN NUMBER);

    --FIDE_PROVINCIA_TB
    PROCEDURE FIDE_PROVINCIA_TB_INSERTAR_SP (p_id_provincia IN NUMBER,p_nombre_provincia IN VARCHAR2,p_id_estado IN NUMBER);
    PROCEDURE FIDE_PROVINCIA_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,p_id_provincia in fide_provincia_tb.id_provincia%type);
    PROCEDURE FIDE_PROVINCIA_TB_ACTUALIZAR_SP (p_id_provincia IN NUMBER,p_nombre_provincia IN VARCHAR2,p_id_estado IN NUMBER);

    --FIDE_CANTON_TB
    PROCEDURE FIDE_CANTON_TB_INSERTAR_SP (p_id_canton IN NUMBER, nombre_canton IN VARCHAR2, p_id_estado IN NUMBER);
    PROCEDURE FIDE_CANTON_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,p_id_canton in fide_canton_tb.id_canton%type);
    PROCEDURE FIDE_CANTON_TB_ACTUALIZAR_SP (p_id_canton IN NUMBER,p_nombre_canton IN VARCHAR2,p_id_estado IN NUMBER);

    --FIDE_DISTRITO_TB
    PROCEDURE FIDE_DISTRITO_TB_INSERTAR_SP (p_id_distrito IN NUMBER,p_nombre_distrito IN VARCHAR2,p_id_estado IN NUMBER);
    PROCEDURE FIDE_DISTRITO_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_DISTRITO IN FIDE_DISTRITO_TB.ID_DISTRITO%TYPE);
    PROCEDURE FIDE_DISTRITO_TB_ACTUALIZAR_SP (p_id_distrito IN NUMBER,p_nombre_distrito IN VARCHAR2,p_id_estado IN NUMBER);

    --FIDE_SUCURSAL_TB
    PROCEDURE FIDE_SUCURSAL_TB_INSERTAR_SP (p_id_sucursal IN NUMBER,p_telefono IN NUMBER,p_email IN VARCHAR2,p_id_estado IN NUMBER);
    PROCEDURE FIDE_SUCURSAL_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_SUCURSAL IN FIDE_SUCURSAL_TB.ID_SUCURSAL%TYPE);
    PROCEDURE FIDE_SUCURSAL_TB_ACTUALIZAR_SP (p_id_sucursal IN NUMBER,p_telefono IN NUMBER,p_email IN VARCHAR2,p_id_estado IN NUMBER);


    --FIDE_DIRECCION_TB
    PROCEDURE FIDE_DIRECCION_TB_INSERTAR_SP (p_id_sucursal IN NUMBER,p_detalle_direccion IN VARCHAR2,p_id_distrito IN NUMBER,p_id_canton IN NUMBER,p_id_provincia IN NUMBER,p_id_estado IN NUMBER);
    PROCEDURE FIDE_DIRECCION_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_DISTRITO IN FIDE_DIRECCION_TB.ID_DISTRITO%TYPE,P_ID_CANTON IN FIDE_DIRECCION_TB.ID_CANTON%TYPE,P_ID_PROVINCIA IN FIDE_DIRECCION_TB.ID_PROVINCIA%TYPE);
    PROCEDURE FIDE_DIRECCION_TB_ACTUALIZAR_SP (p_id_sucursal IN NUMBER,p_detalle_direccion IN VARCHAR2,p_id_distrito IN NUMBER,p_id_canton IN NUMBER,p_id_provincia IN NUMBER,p_id_estado IN NUMBER);


    --FIDE_AREA_TRABAJO
    --Insertar FIDE_AREA_TRABAJO
    PROCEDURE FIDE_AREA_TRABAJO_TB_INSERTAR_SP (p_id_area_trabajo IN NUMBER,p_nombre IN VARCHAR2,p_descripcion IN VARCHAR2,p_id_estado IN NUMBER);
    PROCEDURE FIDE_AREA_TRABAJO_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_AREA_TRABAJO IN FIDE_AREA_TRABAJO_TB.ID_AREA_TRABAJO%TYPE);
    PROCEDURE FIDE_AREA_TRABAJO_TB_ACTUALIZAR_SP (p_id_area_trabajo IN NUMBER,p_nombre IN VARCHAR2,p_descripcion IN VARCHAR2,p_id_estado IN NUMBER);


    --FIDE_EMPLEADO_TB
    --Insertar FIDE_EMPLEADO_TB
    PROCEDURE FIDE_EMPLEADO_TB_INSERTAR_SP (p_id_empleado IN NUMBER,p_nombre_empleado IN VARCHAR2,p_primer_apellido IN VARCHAR2,p_segundo_apellido IN VARCHAR2,p_email IN VARCHAR2,p_num_telefono IN NUMBER,p_id_puesto_trabajo IN NUMBER,p_id_area_trabajo IN NUMBER,p_id_sucursal IN NUMBER,p_id_estado IN NUMBER);
    PROCEDURE FIDE_EMPLEADO_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_EMPLEADO IN FIDE_EMPLEADO_TB.ID_EMPLEADO%TYPE);
    PROCEDURE FIDE_EMPLEADO_TB_ACTUALIZAR_SP (p_id_empleado IN NUMBER,p_nombre_empleado IN VARCHAR2,p_primer_apellido IN VARCHAR2,p_segundo_apellido IN VARCHAR2,p_email IN VARCHAR2,p_num_telefono IN NUMBER,p_id_puesto_trabajo IN NUMBER,p_id_area_trabajo IN NUMBER,p_id_sucursal IN NUMBER,p_id_estado IN NUMBER);


    --Actualizar FIDE_CATEGORIA_PRODUCTO_TB
    PROCEDURE FIDE_CATEGORIA_PRODUCTO_TB_INSERTAR_SP (p_id_categoria IN NUMBER,p_nombre IN VARCHAR2,p_descripcion IN VARCHAR2,p_id_estado IN NUMBER);
    PROCEDURE FIDE_CATEGORIA_PRODUCTO_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_CATEGORIA IN FIDE_CATEGORIA_PRODUCTO_TB.ID_CATEGORIA%TYPE);
    PROCEDURE FIDE_CATEGORIA_PRODUCTO_TB_ACTUALIZAR_SP (p_id_categoria IN NUMBER,p_nombre IN VARCHAR2,p_descripcion IN VARCHAR2,p_id_estado IN NUMBER);


    --FIDE_PRODUCTO_TB
    --Insertar FIDE_PRODUCTO_TB
    PROCEDURE FIDE_PRODUCTO_TB_INSERTAR_SP (p_ID_PRODUCTO IN NUMBER,p_NOMBRE IN VARCHAR2,p_DESCRIPCION IN VARCHAR2,p_ID_CATEGORIA IN NUMBER,p_ID_SUCURSAL IN NUMBER,p_ID_ESTADO IN NUMBER);
    PROCEDURE FIDE_PRODUCTO_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_PRODUCTO IN FIDE_PRODUCTO_TB.ID_PRODUCTO%TYPE);
    PROCEDURE FIDE_PRODUCTO_TB_ACTUALIZAR_SP (p_ID_PRODUCTO IN NUMBER,p_NOMBRE IN VARCHAR2,p_DESCRIPCION IN VARCHAR2,p_ID_CATEGORIA IN NUMBER,p_ID_SUCURSAL IN NUMBER,p_ID_ESTADO IN NUMBER);


    --Insertar FIDE_TIPO_RESERVA
    PROCEDURE FIDE_TIPO_RESERVA_TB_INSERTAR_SP (p_ID_TIPO_RESERVA IN NUMBER,p_NOMBRE IN VARCHAR2,p_DESCRIPCION IN VARCHAR2,p_ID_ESTADO IN NUMBER);
    PROCEDURE FIDE_TIPO_RESERVA_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_TIPO_RESERVA IN FIDE_TIPO_RESERVA_TB.ID_TIPO_RESERVA%TYPE);
    PROCEDURE FIDE_TIPO_RESERVA_TB_ACTUALIZAR_SP (p_ID_TIPO_RESERVA IN NUMBER,p_NOMBRE IN VARCHAR2,p_DESCRIPCION IN VARCHAR2,p_ID_ESTADO IN NUMBER);


    -- FIDE_TIPO_HABITACION_TB
    --INSERTAR FIDE_TIPO_HABITACION_TB
    PROCEDURE FIDE_TIPO_HABITACION_TB_INSERTAR_SP (p_DESCRIPCION IN VARCHAR2,p_PRECIO IN NUMBER,p_ID_ESTADO IN NUMBER);
    PROCEDURE FIDE_TIPO_HABITACION_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_TIPO_HABITACION IN FIDE_TIPO_HABITACION_TB.ID_TIPO_HABITACION%TYPE);
    PROCEDURE FIDE_TIPO_HABITACION_TB_ACTUALIZAR_SP (p_ID_TIPO_HABITACION IN NUMBER,p_DESCRIPCION IN VARCHAR2,p_PRECIO IN NUMBER,p_ID_ESTADO IN NUMBER);


    --FIDE_HABITACION_TB
    --Insertar FIDE_HABITACION_TB
    PROCEDURE FIDE_HABITACION_TB_INSERTAR_SP (p_ID_HABITACION IN VARCHAR2,p_ID_TIPO_HABITACION IN NUMBER,p_ID_SUCURSAL IN NUMBER,p_ID_ESTADO IN NUMBER);
    PROCEDURE FIDE_HABITACION_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_ID_HABITACION IN FIDE_HABITACION_TB.ID_HABITACION%TYPE);
    PROCEDURE FIDE_HABITACION_TB_ACTUALIZAR_SP (p_ID_HABITACION IN VARCHAR2,p_ID_TIPO_HABITACION IN NUMBER,p_ID_SUCURSAL IN NUMBER,p_ID_ESTADO IN NUMBER);


    --FIDE_RESERVA_TB
    -- Insertar FIDE_RESERVA_TB
    PROCEDURE FIDE_RESERVA_TB_INSERTAR_SP(p_NUM_RESERVA     IN NUMBER,p_ID_CLIENTE      IN NUMBER,p_ID_HABITACION   IN VARCHAR2,p_FECHA_RESERVADO IN DATE,p_ID_TIPO_RESERVA IN NUMBER,p_ID_ESTADO       IN NUMBER);
    PROCEDURE FIDE_RESERVA_TB_OBTENER_SP(p_resultado OUT SYS_REFCURSOR,P_NUM_RESERVA IN FIDE_RESERVA_TB.NUM_RESERVA%TYPE,P_ID_CLIENTE IN FIDE_RESERVA_TB.ID_CLIENTE%TYPE,P_ID_HABITACION IN FIDE_RESERVA_TB.ID_HABITACION%TYPE);
    PROCEDURE FIDE_RESERVA_TB_ACTUALIZAR_SP(p_NUM_RESERVA     IN NUMBER,p_ID_CLIENTE      IN NUMBER,p_ID_HABITACION   IN VARCHAR2,p_FECHA_RESERVADO IN DATE,p_ID_TIPO_RESERVA IN NUMBER,p_ID_ESTADO       IN NUMBER);



    --FIDE_DETALLE_FACTURA_TB
    --Insertar FIDE_DETALLE_FACTURA_TB
    PROCEDURE FIDE_DETALLE_FACTURA_TB_INSERTAR_SP (p_NUM_DETALLE_FACTURA IN VARCHAR2,p_NUM_RESERVA IN NUMBER,p_ID_CLIENTE IN NUMBER,p_ID_HABITACION IN VARCHAR2,p_ID_ESTADO IN NUMBER);
    PROCEDURE FIDE_DETALLE_FACTURA_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_NUM_DETALLE_FACTURA IN FIDE_DETALLE_FACTURA_TB.NUM_DETALLE_FACTURA%TYPE,P_NUM_RESERVA IN FIDE_DETALLE_FACTURA_TB.NUM_RESERVA%TYPE,P_ID_CLIENTE IN FIDE_DETALLE_FACTURA_TB.ID_CLIENTE%TYPE,P_ID_HABITACION IN FIDE_DETALLE_FACTURA_TB.ID_HABITACION%TYPE);
    PROCEDURE FIDE_DETALLE_FACTURA_TB_ACTUALIZAR_SP (p_NUM_DETALLE_FACTURA IN VARCHAR2,p_NUM_RESERVA IN NUMBER,p_ID_CLIENTE IN NUMBER,p_ID_HABITACION IN VARCHAR2,p_ID_ESTADO IN NUMBER);


    --FIDE_FACTURA_TB
    --Insertar FIDE_FACTURA_TB
    PROCEDURE FIDE_FACTURA_TB_INSERTAR_SP (p_NUM_FACTURA         IN VARCHAR2,p_ID_CLIENTE          IN NUMBER,p_ID_EMPLEADO         IN NUMBER,p_NUM_DETALLE_FACTURA IN VARCHAR2,p_NUM_RESERVA         IN NUMBER,p_ID_HABITACION       IN VARCHAR2,p_TOTAL               IN NUMBER,p_ID_ESTADO           IN NUMBER);
    PROCEDURE FIDE_FACTURA_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_NUM_FACTURA IN FIDE_FACTURA_TB.NUM_FACTURA%TYPE,P_ID_CLIENTE IN FIDE_FACTURA_TB.ID_CLIENTE%TYPE,P_ID_EMPELADO IN FIDE_FACTURA_TB.ID_EMPLEADO%TYPE,P_NUM_DETALLE_FACTURA IN FIDE_FACTURA_TB.NUM_DETALLE_FACTURA%TYPE);
    PROCEDURE FIDE_FACTURA_TB_ACTUALIZAR_SP (p_NUM_FACTURA         IN VARCHAR2,p_ID_CLIENTE          IN NUMBER,p_ID_EMPLEADO         IN NUMBER,p_NUM_DETALLE_FACTURA IN VARCHAR2,p_NUM_RESERVA         IN NUMBER,p_ID_HABITACION       IN VARCHAR2,p_TOTAL               IN NUMBER,p_ID_ESTADO           IN NUMBER);


    --FIDE_DETALLE_SERVICIO_TB
    --Insertar FIDE_DETALLE_SERVICIO_TB
    PROCEDURE FIDE_DETALLE_SERVICIO_TB_INSERTAR_SP (p_NUM_DETALLE_SERVICIO IN VARCHAR2,p_DESCRIPCION          IN VARCHAR2,p_PRECIO               IN NUMBER,p_ID_ESTADO            IN NUMBER);
    PROCEDURE FIDE_DETALLE_SERVICIO_TB_OBTENER_SP (p_resultado OUT SYS_REFCURSOR,P_NUM_DETALLE_SERVICIO IN FIDE_DETALLE_SERVICIO_HABITACION_TB.NUM_DETALLE_SERVICIO%TYPE);
    PROCEDURE FIDE_DETALLE_SERVICIO_TB_ACTUALIZAR_SP (p_NUM_DETALLE_SERVICIO IN VARCHAR2,p_DESCRIPCION          IN VARCHAR2,p_PRECIO               IN NUMBER,p_ID_ESTADO            IN NUMBER);


    --FIDE_SERVICIO_HABITACION_TB
    --Insertar FIDE_SERVICIO_HABITACION_TB
    PROCEDURE FIDE_SERVICIO_HABITACION_TB_INSERTAR_SP (p_NUM_SERVICIO_HABITACION IN VARCHAR2,p_ID_CLIENTE IN NUMBER,p_ID_HABITACION IN VARCHAR2,p_NUM_DETALLE_SERVICIO IN VARCHAR2,p_ID_ESTADO IN NUMBER);
    PROCEDURE FIDE_SERVICIO_HABITACION_TB_OBTENER_SP (p_RESULTADO OUT SYS_REFCURSOR,P_NUM_SERVICIO_HABITACION IN FIDE_SERVICIO_HABITACION_TB.NUM_SERVICIO_HABITACION%TYPE,p_ID_CLIENTE IN NUMBER,p_ID_HABITACION IN VARCHAR2,P_NUM_DETALLE_SERVICIO IN FIDE_SERVICIO_HABITACION_TB.NUM_DETALLE_SERVICIO%TYPE);
    PROCEDURE FIDE_SERVICIO_HABITACION_TB_ACTUALIZAR_SP (p_NUM_SERVICIO_HABITACION IN VARCHAR2,p_ID_CLIENTE IN NUMBER,p_ID_HABITACION IN VARCHAR2,p_NUM_DETALLE_SERVICIO IN VARCHAR2,p_ID_ESTADO IN NUMBER);

END FIDE_PAQUETE;
/











CREATE OR REPLACE PACKAGE BODY FIDE_PAQUETE IS

    FUNCTION FIDE_CLIENTE_TB_OBTENER_NOMBRE_COMPLETO_FN(p_id_cliente NUMBER) RETURN VARCHAR2 IS
        v_nombre_completo VARCHAR2(200);
    BEGIN
        SELECT NOMBRE_CLIENTE || ' ' || PRIMER_APELLIDO || ' ' || SEGUNDO_APELLIDO
        INTO v_nombre_completo
        FROM FIDE_CLIENTE_TB
        WHERE ID_CLIENTE = p_id_cliente;
        RETURN v_nombre_completo;
    END;

    FUNCTION FIDE_CLIENTE_TB_CONTAR_POR_TIPO_FN(p_id_tipo_cliente NUMBER) RETURN NUMBER IS
        v_total NUMBER;
    BEGIN
        SELECT COUNT(*) INTO v_total FROM FIDE_CLIENTE_TB WHERE ID_TIPO_CLIENTE = p_id_tipo_cliente;
        RETURN v_total;
    END;

    FUNCTION FIDE_CLIENTE_TB_EXISTE_CORREO_FN(p_email VARCHAR2) RETURN NUMBER IS
        v_existe NUMBER;
    BEGIN
        SELECT COUNT(*) INTO v_existe FROM FIDE_CLIENTE_TB WHERE EMAIL = p_email;
        RETURN CASE WHEN v_existe > 0 THEN 1 ELSE 0 END;
    END;

    FUNCTION FIDE_PUESTO_TRABAJO_TB_OBTENER_SALARIO_FN(p_id_puesto NUMBER) RETURN NUMBER IS
        v_salario NUMBER;
    BEGIN
        SELECT SALARIO INTO v_salario FROM FIDE_PUESTO_TRABAJO_TB WHERE ID_PUESTO_TRABAJO = p_id_puesto;
        RETURN v_salario;
    END;

    FUNCTION FIDE_PUESTO_TRABAJO_TB_LISTAR_POR_ESTADO_FN(p_id_estado NUMBER) RETURN VARCHAR2 IS
        v_lista VARCHAR2(1000);
    BEGIN
        SELECT LISTAGG(ID_PUESTO_TRABAJO, ',') WITHIN GROUP (ORDER BY ID_PUESTO_TRABAJO)
        INTO v_lista FROM FIDE_PUESTO_TRABAJO_TB WHERE ID_ESTADO = p_id_estado;
        RETURN v_lista;
    END;

    FUNCTION FIDE_ESTADO_TB_OBTENER_DESCRIPCION_FN(p_id_estado NUMBER) RETURN VARCHAR2 IS
        v_desc VARCHAR2(500);
    BEGIN
        SELECT DESCRIPCION_ESTADO INTO v_desc FROM FIDE_ESTADO_TB WHERE ID_ESTADO = p_id_estado;
        RETURN v_desc;
    END;

    FUNCTION FIDE_TIPO_CLIENTE_TB_DESCRIPCION_POR_ID_FN(p_id_tipo_cliente NUMBER) RETURN VARCHAR2 IS
        v_desc VARCHAR2(300);
    BEGIN
        SELECT DESCRIPCION INTO v_desc FROM FIDE_TIPO_CLIENTE_TB WHERE ID_TIPO_CLIENTE = p_id_tipo_cliente;
        RETURN v_desc;
    END;

    FUNCTION FIDE_PROVINCIA_TB_OBTENER_NOMBRE_FN(p_id_provincia NUMBER) RETURN VARCHAR2 IS
        v_nombre VARCHAR2(50);
    BEGIN
        SELECT NOMBRE_PROVINCIA INTO v_nombre FROM FIDE_PROVINCIA_TB WHERE ID_PROVINCIA = p_id_provincia;
        RETURN v_nombre;
    END;

    FUNCTION FIDE_CANTON_TB_OBTENER_NOMBRE_FN(p_id_canton NUMBER) RETURN VARCHAR2 IS
        v_nombre VARCHAR2(50);
    BEGIN
        SELECT NOMBRE_CANTON INTO v_nombre FROM FIDE_CANTON_TB WHERE ID_CANTON = p_id_canton;
        RETURN v_nombre;
    END;

    FUNCTION FIDE_DISTRITO_TB_OBTENER_NOMBRE_FN(p_id_distrito NUMBER) RETURN VARCHAR2 IS
        v_nombre VARCHAR2(255);
    BEGIN
        SELECT NOMBRE_DISTRITO INTO v_nombre FROM FIDE_DISTRITO_TB WHERE ID_DISTRITO = p_id_distrito;
        RETURN v_nombre;
    END;

    FUNCTION FIDE_SUCURSAL_TB_OBTENER_EMAIL_FN(p_id_sucursal NUMBER) RETURN VARCHAR2 IS
        v_email VARCHAR2(250);
    BEGIN
        SELECT EMAIL INTO v_email FROM FIDE_SUCURSAL_TB WHERE ID_SUCURSAL = p_id_sucursal;
        RETURN v_email;
    END;

    FUNCTION FIDE_DIRECCION_TB_OBTENER_COMPLETA_FN(p_id_sucursal NUMBER) RETURN VARCHAR2 IS
        v_direccion VARCHAR2(500);
    BEGIN
        SELECT DETALLE_DIRECCION || ', ' || ID_DISTRITO || ', ' || ID_CANTON || ', ' || ID_PROVINCIA
        INTO v_direccion FROM FIDE_DIRECCION_TB WHERE ID_SUCURSAL = p_id_sucursal;
        RETURN v_direccion;
    END;

    FUNCTION FIDE_CLIENTE_TB_TELEFONO_POR_ID_FN(p_id_cliente NUMBER) RETURN NUMBER IS
        v_telefono NUMBER;
    BEGIN
        SELECT NUM_TELEFONO INTO v_telefono FROM FIDE_CLIENTE_TB WHERE ID_CLIENTE = p_id_cliente;
        RETURN v_telefono;
    END;

    FUNCTION FIDE_CLIENTE_TB_ESTADO_POR_ID_FN(p_id_cliente NUMBER) RETURN NUMBER IS
        v_estado NUMBER;
    BEGIN
        SELECT ID_ESTADO INTO v_estado FROM FIDE_CLIENTE_TB WHERE ID_CLIENTE = p_id_cliente;
        RETURN v_estado;
    END;

    FUNCTION FIDE_CLIENTE_TB_LISTAR_POR_ESTADO_FN(p_id_estado NUMBER) RETURN VARCHAR2 IS
        v_lista VARCHAR2(1000);
    BEGIN
        SELECT LISTAGG(ID_CLIENTE, ',') WITHIN GROUP (ORDER BY ID_CLIENTE)
        INTO v_lista FROM FIDE_CLIENTE_TB WHERE ID_ESTADO = p_id_estado;
        RETURN v_lista;
    END;

    -- IMPLEMENTACIONES DE PROCEDIMIENTOS DESDE EL ARCHIVO procesos.txt

    --FIDE_ESTADO_TB
--Insertar FIDE_ESTADO_TB
PROCEDURE FIDE_ESTADO_TB_INSERTAR_SP (
    p_id_estado IN NUMBER,
    p_estado IN VARCHAR2,
    p_descripcion_estado IN VARCHAR2
) AS
BEGIN
    INSERT INTO FIDE_ESTADO_TB (ID_ESTADO, ESTADO, DESCRIPCION_ESTADO)
    VALUES (p_id_estado, p_estado, p_descripcion_estado);
END FIDE_ESTADO_TB_INSERTAR_SP;


--CONSULTAR FIDE_ESTADO_TB
PROCEDURE FIDE_ESTADO_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    p_id_estado FIDE_ESTADO_TB.id_estado%type
) AS
BEGIN
IF P_ID_ESTADO IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_ESTADO, ESTADO, DESCRIPCION_ESTADO 
        FROM FIDE_ESTADO_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_ESTADO, ESTADO, DESCRIPCION_ESTADO 
        FROM FIDE_ESTADO_TB
        WHERE ID_ESTADO = P_ID_ESTADO;
    END IF;
END FIDE_ESTADO_TB_OBTENER_SP;


--CONSULTAR FIDE_ESTADO_TB
PROCEDURE FIDE_ESTADO_TB_ACTUALIZAR_SP (
    p_id_estado IN NUMBER,
    p_estado IN VARCHAR2,
    p_descripcion_estado IN VARCHAR2
) AS
BEGIN
    UPDATE FIDE_ESTADO_TB
    SET ESTADO = p_estado,
        DESCRIPCION_ESTADO = p_descripcion_estado
    WHERE ID_ESTADO = p_id_estado;
END FIDE_ESTADO_TB_ACTUALIZAR_SP;


--FIDE_TIPO_CLIENTE_TB
--Insertar FIDE_TIPO_CLIENTE_TB
PROCEDURE FIDE_TIPO_CLIENTE_TB_INSERTAR_SP (
    p_id_tipo_cliente IN fide_tipo_cliente_tb.id_tipo_cliente%type,
    p_descripcion IN fide_tipo_cliente_tb.descripcion%type,
    p_id_estado IN fide_tipo_cliente_tb.id_estado%type
) AS
BEGIN
    INSERT INTO FIDE_TIPO_CLIENTE_TB (
        ID_TIPO_CLIENTE, DESCRIPCION, ID_ESTADO
    ) VALUES (
        p_id_tipo_cliente, p_descripcion, p_id_estado
    );
END FIDE_TIPO_CLIENTE_TB_INSERTAR_SP;


--Consultar FIDE_TIPO_CLIENTE_TB
PROCEDURE FIDE_TIPO_CLIENTE_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    p_id_tipo_cliente fide_tipo_cliente_tb.id_tipo_cliente%type
) AS
BEGIN
    IF P_ID_TIPO_CLIENTE IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_TIPO_CLIENTE, DESCRIPCION, ID_ESTADO
        FROM FIDE_TIPO_CLIENTE_TB;
    ELSE 
        OPEN p_resultado FOR
        SELECT ID_TIPO_CLIENTE, DESCRIPCION, ID_ESTADO
        FROM FIDE_TIPO_CLIENTE_TB
        WHERE ID_TIPO_CLIENTE = P_ID_TIPO_CLIENTE;
    END IF;
END FIDE_TIPO_CLIENTE_TB_OBTENER_SP;


--Actualizar FIDE_TIPO_CLIENTE_TB
PROCEDURE FIDE_TIPO_CLIENTE_TB_ACTUALIZAR_SP (
    p_id_tipo_cliente IN NUMBER,
    p_descripcion IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_TIPO_CLIENTE_TB
    SET DESCRIPCION = p_descripcion,
        ID_ESTADO = p_id_estado
    WHERE ID_TIPO_CLIENTE = p_id_tipo_cliente;
END FIDE_TIPO_CLIENTE_TB_ACTUALIZAR_SP;


--FIDE_CLIENTE_TB
--Insertar FIDE_CLIENTE_TB
PROCEDURE FIDE_CLIENTE_TB_INSERTAR_SP (
    p_id_cliente IN NUMBER,
    p_nombre_cliente IN VARCHAR2,
    p_primer_apellido IN VARCHAR2,
    p_segundo_apellido IN VARCHAR2,
    p_email IN VARCHAR2,
    p_num_telefono IN NUMBER,
    p_id_tipo_cliente IN NUMBER,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_CLIENTE_TB (
        ID_CLIENTE, NOMBRE_CLIENTE, PRIMER_APELLIDO, SEGUNDO_APELLIDO,
        EMAIL, NUM_TELEFONO, ID_TIPO_CLIENTE, ID_ESTADO
    ) VALUES (
        p_id_cliente, p_nombre_cliente, p_primer_apellido, p_segundo_apellido,
        p_email, p_num_telefono, p_id_tipo_cliente, p_id_estado
    );
END FIDE_CLIENTE_TB_INSERTAR_SP;


--OBTENER FIDE_CLIENTE_TB
PROCEDURE FIDE_CLIENTE_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    p_id_cliente in fide_cliente_tb.id_cliente%type
) AS
BEGIN
    IF P_ID_CLIENTE IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_CLIENTE, NOMBRE_CLIENTE, PRIMER_APELLIDO, SEGUNDO_APELLIDO,
               EMAIL, NUM_TELEFONO, ID_TIPO_CLIENTE, ID_ESTADO
        FROM FIDE_CLIENTE_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_CLIENTE, NOMBRE_CLIENTE, PRIMER_APELLIDO, SEGUNDO_APELLIDO,
               EMAIL, NUM_TELEFONO, ID_TIPO_CLIENTE, ID_ESTADO
        FROM FIDE_CLIENTE_TB
        WHERE ID_CLIENTE =P_ID_CLIENTE;
    END IF;
END FIDE_CLIENTE_TB_OBTENER_SP;


--Actualizar FIDE_CLIENTE_TB
PROCEDURE FIDE_CLIENTE_TB_ACTUALIZAR_SP (
    p_id_cliente IN NUMBER,
    p_nombre_cliente IN VARCHAR2,
    p_primer_apellido IN VARCHAR2,
    p_segundo_apellido IN VARCHAR2,
    p_email IN VARCHAR2,
    p_num_telefono IN NUMBER,
    p_id_tipo_cliente IN NUMBER,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_CLIENTE_TB
    SET NOMBRE_CLIENTE = p_nombre_cliente,
        PRIMER_APELLIDO = p_primer_apellido,
        SEGUNDO_APELLIDO = p_segundo_apellido,
        EMAIL = p_email,
        NUM_TELEFONO = p_num_telefono,
        ID_TIPO_CLIENTE = p_id_tipo_cliente,
        ID_ESTADO = p_id_estado
    WHERE ID_CLIENTE = p_id_cliente;
END FIDE_CLIENTE_TB_ACTUALIZAR_SP;


--FIDE_PUESTO_TRABAJO_TB
--Insertar FIDE_PUESTO_TRABAJO_TB
PROCEDURE FIDE_PUESTO_TRABAJO_TB_INSERTAR_SP (
    p_id_puesto_trabajo IN NUMBER,
    p_nombre IN VARCHAR2,
    p_descripcion IN VARCHAR2,
    p_salario IN NUMBER,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_PUESTO_TRABAJO_TB (
        ID_PUESTO_TRABAJO, NOMBRE, DESCRIPCION, SALARIO, ID_ESTADO
    ) VALUES (
        p_id_puesto_trabajo, p_nombre, p_descripcion, p_salario, p_id_estado
    );
END FIDE_PUESTO_TRABAJO_TB_INSERTAR_SP;


--Consultar FIDE_PUESTO_TRABAJO_TB
PROCEDURE FIDE_PUESTO_TRABAJO_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    p_id_puesto_trabajo in fide_puesto_trabajo_tb.id_puesto_trabajo%type
) AS
BEGIN
    IF P_ID_PUESTO_TRABAJO IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_PUESTO_TRABAJO, NOMBRE, DESCRIPCION, SALARIO, ID_ESTADO
        FROM FIDE_PUESTO_TRABAJO_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_PUESTO_TRABAJO, NOMBRE, DESCRIPCION, SALARIO, ID_ESTADO
        FROM FIDE_PUESTO_TRABAJO_TB
        WHERE ID_PUESTO_TRABAJO = P_ID_PUESTO_TRABAJO;
    END IF;
END FIDE_PUESTO_TRABAJO_TB_OBTENER_SP;


--Actualizar FIDE_PUESTO_TRABAJO_TB
PROCEDURE FIDE_PUESTO_TRABAJO_TB_ACTUALIZAR_SP (
    p_id_puesto_trabajo IN NUMBER,
    p_nombre IN VARCHAR2,
    p_descripcion IN VARCHAR2,
    p_salario IN NUMBER,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_PUESTO_TRABAJO_TB
    SET NOMBRE = p_nombre,
        DESCRIPCION = p_descripcion,
        SALARIO = p_salario,
        ID_ESTADO = p_id_estado
    WHERE ID_PUESTO_TRABAJO = p_id_puesto_trabajo;
END FIDE_PUESTO_TRABAJO_TB_ACTUALIZAR_SP;


--FIDE_PROVINCIA_TB
--Insertar FIDE_PROVINCIA_TB
PROCEDURE FIDE_PROVINCIA_TB_INSERTAR_SP (
    p_id_provincia IN NUMBER,
    p_nombre_provincia IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_PROVINCIA_TB (
        ID_PROVINCIA, NOMBRE_PROVINCIA, ID_ESTADO
    ) VALUES (
        p_id_provincia, p_nombre_provincia, p_id_estado
    );
END FIDE_PROVINCIA_TB_INSERTAR_SP;


--Obtener FIDE_PROVINCIA_TB
PROCEDURE FIDE_PROVINCIA_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    p_id_provincia in fide_provincia_tb.id_provincia%type
) AS
BEGIN
    IF P_ID_PROVINCIA IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_PROVINCIA, NOMBRE_PROVINCIA, ID_ESTADO
        FROM FIDE_PROVINCIA_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_PROVINCIA, NOMBRE_PROVINCIA, ID_ESTADO
        FROM FIDE_PROVINCIA_TB
        WHERE ID_PROVINCIA = P_ID_PROVINCIA;
    END IF;
END FIDE_PROVINCIA_TB_OBTENER_SP;


--Actualizar FIDE_PROVINCIA_TB
PROCEDURE FIDE_PROVINCIA_TB_ACTUALIZAR_SP (
    p_id_provincia IN NUMBER,
    p_nombre_provincia IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_PROVINCIA_TB
    SET NOMBRE_PROVINCIA = p_nombre_provincia,
        ID_ESTADO = p_id_estado
    WHERE ID_PROVINCIA = p_id_provincia;
END FIDE_PROVINCIA_TB_ACTUALIZAR_SP;


--FIDE_CANTON_TB
--Insertar FIDE_CANTON_TB
PROCEDURE FIDE_CANTON_TB_INSERTAR_SP (
    p_id_canton IN NUMBER,
    p_nombre_canton IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_CANTON_TB (
        ID_CANTON, NOMBRE_CANTON, ID_ESTADO
    ) VALUES (
        p_id_canton, p_nombre_canton, p_id_estado
    );
END FIDE_CANTON_TB_INSERTAR_SP;

--CONSULTAR FIDE_CANTON_TB
PROCEDURE FIDE_CANTON_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    p_id_canton in fide_canton_tb.id_canton%type
) AS
BEGIN
    IF P_ID_CANTON IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_CANTON, NOMBRE_CANTON, ID_ESTADO
        FROM FIDE_CANTON_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_CANTON, NOMBRE_CANTON, ID_ESTADO
        FROM FIDE_CANTON_TB
        WHERE ID_CANTON = P_ID_CANTON;
    END IF;
END FIDE_CANTON_TB_OBTENER_SP;


--Actualizar FIDE_CANTON_TB
PROCEDURE FIDE_CANTON_TB_ACTUALIZAR_SP (
    p_id_canton IN NUMBER,
    p_nombre_canton IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_CANTON_TB
    SET NOMBRE_CANTON = p_nombre_canton,
        ID_ESTADO = p_id_estado
    WHERE ID_CANTON = p_id_canton;
END FIDE_CANTON_TB_ACTUALIZAR_SP;


--FIDE_DISTRITO_TB
--Insertar FIDE_DISTRITO_TB
PROCEDURE FIDE_DISTRITO_TB_INSERTAR_SP (
    p_id_distrito IN NUMBER,
    p_nombre_distrito IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_DISTRITO_TB (
        ID_DISTRITO, NOMBRE_DISTRITO, ID_ESTADO
    ) VALUES (
        p_id_distrito, p_nombre_distrito, p_id_estado
    );
END FIDE_DISTRITO_TB_INSERTAR_SP;


--Obtener FIDE_DISTRITO_TB
PROCEDURE FIDE_DISTRITO_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_DISTRITO IN FIDE_DISTRITO_TB.ID_DISTRITO%TYPE
) AS
BEGIN
    IF P_ID_DISTRITO IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_DISTRITO, NOMBRE_DISTRITO, ID_ESTADO
        FROM FIDE_DISTRITO_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_DISTRITO, NOMBRE_DISTRITO, ID_ESTADO
        FROM FIDE_DISTRITO_TB
        WHERE ID_DISTRITO = P_ID_DISTRITO;
    END IF;
END FIDE_DISTRITO_TB_OBTENER_SP;


--Actualizar FIDE_DISTRITO_TB
PROCEDURE FIDE_DISTRITO_TB_ACTUALIZAR_SP (
    p_id_distrito IN NUMBER,
    p_nombre_distrito IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_DISTRITO_TB
    SET NOMBRE_DISTRITO = p_nombre_distrito,
        ID_ESTADO = p_id_estado
    WHERE ID_DISTRITO = p_id_distrito;
END FIDE_DISTRITO_TB_ACTUALIZAR_SP;


--FIDE_SUCURSAL_TB
--Insertar FIDE_SUCURSAL_TB
PROCEDURE FIDE_SUCURSAL_TB_INSERTAR_SP (
    p_id_sucursal IN NUMBER,
    p_telefono IN NUMBER,
    p_email IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_SUCURSAL_TB (
        ID_SUCURSAL, TELEFONO, EMAIL, ID_ESTADO
    ) VALUES (
        p_id_sucursal, p_telefono, p_email, p_id_estado
    );
END FIDE_SUCURSAL_TB_INSERTAR_SP;


--Obtener FIDE_SUCURSAL_TB
PROCEDURE FIDE_SUCURSAL_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_SUCURSAL IN FIDE_SUCURSAL_TB.ID_SUCURSAL%TYPE
) AS
BEGIN
    IF P_ID_SUCURSAL IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_SUCURSAL, TELEFONO, EMAIL, ID_ESTADO
        FROM FIDE_SUCURSAL_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_SUCURSAL, TELEFONO, EMAIL, ID_ESTADO
        FROM FIDE_SUCURSAL_TB
        WHERE ID_SUCURSAL = P_ID_SUCURSAL;
    END IF;
END FIDE_SUCURSAL_TB_OBTENER_SP;


--Actualizar FIDE_SUCURSAL_TB
PROCEDURE FIDE_SUCURSAL_TB_ACTUALIZAR_SP (
    p_id_sucursal IN NUMBER,
    p_telefono IN NUMBER,
    p_email IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_SUCURSAL_TB
    SET TELEFONO = p_telefono,
        EMAIL = p_email,
        ID_ESTADO = p_id_estado
    WHERE ID_SUCURSAL = p_id_sucursal;
END FIDE_SUCURSAL_TB_ACTUALIZAR_SP;



--FIDE_DIRECCION_TB
--Insertar FIDE_DIRECCION_TB
PROCEDURE FIDE_DIRECCION_TB_INSERTAR_SP (
    p_id_sucursal IN NUMBER,
    p_detalle_direccion IN VARCHAR2,
    p_id_distrito IN NUMBER,
    p_id_canton IN NUMBER,
    p_id_provincia IN NUMBER,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_DIRECCION_TB (
        ID_SUCURSAL, DETALLE_DIRECCION, ID_DISTRITO, ID_CANTON, ID_PROVINCIA, ID_ESTADO
    ) VALUES (
        p_id_sucursal, p_detalle_direccion, p_id_distrito, p_id_canton, p_id_provincia, p_id_estado
    );
END FIDE_DIRECCION_TB_INSERTAR_SP;


--Obtener FIDE_DIRECCION_TB
PROCEDURE FIDE_DIRECCION_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_DISTRITO IN FIDE_DIRECCION_TB.ID_DISTRITO%TYPE,
    P_ID_CANTON IN FIDE_DIRECCION_TB.ID_CANTON%TYPE,
    P_ID_PROVINCIA IN FIDE_DIRECCION_TB.ID_PROVINCIA%TYPE
) AS
BEGIN--DISTRITO, CANTON, PROVINCIA
    IF P_ID_DISTRITO IS NULL
    OR P_ID_CANTON IS NULL
    OR P_ID_PROVINCIA IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_SUCURSAL, DETALLE_DIRECCION, ID_DISTRITO, ID_CANTON, ID_PROVINCIA, ID_ESTADO
        FROM FIDE_DIRECCION_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_SUCURSAL, DETALLE_DIRECCION, ID_DISTRITO, ID_CANTON, ID_PROVINCIA, ID_ESTADO
        FROM FIDE_DIRECCION_TB
        WHERE 
            ID_DISTRITO = P_ID_DISTRITO
            AND ID_CANTON = P_ID_CANTON
            AND ID_PROVINCIA = P_ID_PROVINCIA;
    END IF;
END FIDE_DIRECCION_TB_OBTENER_SP;


--Actualizar FIDE_DIRECCION_TB
PROCEDURE FIDE_DIRECCION_TB_ACTUALIZAR_SP (
    p_id_sucursal IN NUMBER,
    p_detalle_direccion IN VARCHAR2,
    p_id_distrito IN NUMBER,
    p_id_canton IN NUMBER,
    p_id_provincia IN NUMBER,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_DIRECCION_TB
    SET DETALLE_DIRECCION = p_detalle_direccion,
        ID_DISTRITO = p_id_distrito,
        ID_CANTON = p_id_canton,
        ID_PROVINCIA = p_id_provincia,
        ID_ESTADO = p_id_estado
    WHERE ID_SUCURSAL = p_id_sucursal;
END FIDE_DIRECCION_TB_ACTUALIZAR_SP;


--FIDE_AREA_TRABAJO
--Insertar FIDE_AREA_TRABAJO
PROCEDURE FIDE_AREA_TRABAJO_TB_INSERTAR_SP (
    p_id_area_trabajo IN NUMBER,
    p_nombre IN VARCHAR2,
    p_descripcion IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_AREA_TRABAJO_TB (
        ID_AREA_TRABAJO, NOMBRE, DESCRIPCION, ID_ESTADO
    ) VALUES (
        p_id_area_trabajo, p_nombre, p_descripcion, p_id_estado
    );
END FIDE_AREA_TRABAJO_TB_INSERTAR_SP;


--Obtener FIDE_AREA_TRABAJO
PROCEDURE FIDE_AREA_TRABAJO_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_AREA_TRABAJO IN FIDE_AREA_TRABAJO_TB.ID_AREA_TRABAJO%TYPE
) AS
BEGIN
    IF P_ID_AREA_TRABAJO IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_AREA_TRABAJO, NOMBRE, DESCRIPCION, ID_ESTADO
        FROM FIDE_AREA_TRABAJO_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_AREA_TRABAJO, NOMBRE, DESCRIPCION, ID_ESTADO
        FROM FIDE_AREA_TRABAJO_TB
        WHERE ID_AREA_TRABAJO = P_ID_AREA_TRABAJO;
    END IF;
END FIDE_AREA_TRABAJO_TB_OBTENER_SP;


--Actualizar FIDE_AREA_TRABAJO_TB
PROCEDURE FIDE_AREA_TRABAJO_TB_ACTUALIZAR_SP (
    p_id_area_trabajo IN NUMBER,
    p_nombre IN VARCHAR2,
    p_descripcion IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_AREA_TRABAJO_TB
    SET NOMBRE = p_nombre,
        DESCRIPCION = p_descripcion,
        ID_ESTADO = p_id_estado
    WHERE ID_AREA_TRABAJO = p_id_area_trabajo;
END FIDE_AREA_TRABAJO_TB_ACTUALIZAR_SP;


--FIDE_EMPLEADO_TB
--Insertar FIDE_EMPLEADO_TB

PROCEDURE FIDE_EMPLEADO_TB_INSERTAR_SP (
    p_id_empleado IN NUMBER,
    p_nombre_empleado IN VARCHAR2,
    p_primer_apellido IN VARCHAR2,
    p_segundo_apellido IN VARCHAR2,
    p_email IN VARCHAR2,
    p_num_telefono IN NUMBER,
    p_id_puesto_trabajo IN NUMBER,
    p_id_area_trabajo IN NUMBER,
    p_id_sucursal IN NUMBER,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_EMPLEADO_TB (
        ID_EMPLEADO, NOMBRE_EMPLEADO, PRIMER_APELLIDO, SEGUNDO_APELLIDO, EMAIL, NUM_TELEFONO, 
        ID_PUESTO_TRABAJO, ID_AREA_TRABAJO, ID_SUCURSAL, ID_ESTADO
    ) VALUES (
        p_id_empleado, p_nombre_empleado, p_primer_apellido, p_segundo_apellido, p_email, p_num_telefono,
        p_id_puesto_trabajo, p_id_area_trabajo, p_id_sucursal, p_id_estado
    );
END FIDE_EMPLEADO_TB_INSERTAR_SP;


--Obtener FIDE_EMPLEADO_TB
PROCEDURE FIDE_EMPLEADO_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_EMPLEADO IN FIDE_EMPLEADO_TB.ID_EMPLEADO%TYPE
) AS
BEGIN
    IF P_ID_EMPLEADO IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_EMPLEADO, NOMBRE_EMPLEADO, PRIMER_APELLIDO, SEGUNDO_APELLIDO, EMAIL, NUM_TELEFONO,
               ID_PUESTO_TRABAJO, ID_AREA_TRABAJO, ID_SUCURSAL, ID_ESTADO
        FROM FIDE_EMPLEADO_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_EMPLEADO, NOMBRE_EMPLEADO, PRIMER_APELLIDO, SEGUNDO_APELLIDO, EMAIL, NUM_TELEFONO,
               ID_PUESTO_TRABAJO, ID_AREA_TRABAJO, ID_SUCURSAL, ID_ESTADO
        FROM FIDE_EMPLEADO_TB
        WHERE ID_EMPLEADO = P_ID_EMPLEADO;
    END IF;
END FIDE_EMPLEADO_TB_OBTENER_SP;


--Actualizar FIDE_EMPLEADO_TB
PROCEDURE FIDE_EMPLEADO_TB_ACTUALIZAR_SP (
    p_id_empleado IN NUMBER,
    p_nombre_empleado IN VARCHAR2,
    p_primer_apellido IN VARCHAR2,
    p_segundo_apellido IN VARCHAR2,
    p_email IN VARCHAR2,
    p_num_telefono IN NUMBER,
    p_id_puesto_trabajo IN NUMBER,
    p_id_area_trabajo IN NUMBER,
    p_id_sucursal IN NUMBER,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_EMPLEADO_TB
    SET NOMBRE_EMPLEADO = p_nombre_empleado,
        PRIMER_APELLIDO = p_primer_apellido,
        SEGUNDO_APELLIDO = p_segundo_apellido,
        EMAIL = p_email,
        NUM_TELEFONO = p_num_telefono,
        ID_PUESTO_TRABAJO = p_id_puesto_trabajo,
        ID_AREA_TRABAJO = p_id_area_trabajo,
        ID_SUCURSAL = p_id_sucursal,
        ID_ESTADO = p_id_estado
    WHERE ID_EMPLEADO = p_id_empleado;
END FIDE_EMPLEADO_TB_ACTUALIZAR_SP;


--Actualizar FIDE_CATEGORIA_PRODUCTO_TB
PROCEDURE FIDE_CATEGORIA_PRODUCTO_TB_INSERTAR_SP (
    p_id_categoria IN NUMBER,
    p_nombre IN VARCHAR2,
    p_descripcion IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_CATEGORIA_PRODUCTO_TB (
        ID_CATEGORIA, NOMBRE, DESCRIPCION, ID_ESTADO
    ) VALUES (
        p_id_categoria, p_nombre, p_descripcion, p_id_estado
    );
END FIDE_CATEGORIA_PRODUCTO_TB_INSERTAR_SP;


-- Obtener FIDE_CATEGORIA_PRODUCTO_TB
PROCEDURE FIDE_CATEGORIA_PRODUCTO_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_CATEGORIA IN FIDE_CATEGORIA_PRODUCTO_TB.ID_CATEGORIA%TYPE
) AS
BEGIN
    IF P_ID_CATEGORIA IS NULL THEN 
        OPEN p_resultado FOR
        SELECT ID_CATEGORIA, NOMBRE, DESCRIPCION, ID_ESTADO
        FROM FIDE_CATEGORIA_PRODUCTO_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_CATEGORIA, NOMBRE, DESCRIPCION, ID_ESTADO
        FROM FIDE_CATEGORIA_PRODUCTO_TB
        WHERE ID_CATEGORIA = P_ID_CATEGORIA;
    END IF;
END FIDE_CATEGORIA_PRODUCTO_TB_OBTENER_SP;



--Actualizar Categoria
PROCEDURE FIDE_CATEGORIA_PRODUCTO_TB_ACTUALIZAR_SP (
    p_id_categoria IN NUMBER,
    p_nombre IN VARCHAR2,
    p_descripcion IN VARCHAR2,
    p_id_estado IN NUMBER
) AS
BEGIN
    UPDATE FIDE_CATEGORIA_PRODUCTO_TB
    SET NOMBRE = p_nombre,
        DESCRIPCION = p_descripcion,
        ID_ESTADO = p_id_estado
    WHERE ID_CATEGORIA = p_id_categoria;
END FIDE_CATEGORIA_PRODUCTO_TB_ACTUALIZAR_SP;


--FIDE_PRODUCTO_TB
--Insertar FIDE_PRODUCTO_TB
PROCEDURE FIDE_PRODUCTO_TB_INSERTAR_SP (
    p_ID_PRODUCTO IN NUMBER,
    p_NOMBRE IN VARCHAR2,
    p_DESCRIPCION IN VARCHAR2,
    p_ID_CATEGORIA IN NUMBER,
    p_ID_SUCURSAL IN NUMBER,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_PRODUCTO_TB (
        ID_PRODUCTO,
        NOMBRE,
        DESCRIPCION,
        ID_CATEGORIA,
        ID_SUCURSAL,
        ID_ESTADO
    ) VALUES (
        p_ID_PRODUCTO,
        p_NOMBRE,
        p_DESCRIPCION,
        p_ID_CATEGORIA,
        p_ID_SUCURSAL,
        p_ID_ESTADO
    );
    COMMIT;
END FIDE_PRODUCTO_TB_INSERTAR_SP;


--Obtener FIDE_PRODUCTO_TB
PROCEDURE FIDE_PRODUCTO_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_PRODUCTO IN FIDE_PRODUCTO_TB.ID_PRODUCTO%TYPE
) AS
BEGIN
    IF P_ID_PRODUCTO IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_PRODUCTO, NOMBRE, DESCRIPCION, ID_CATEGORIA, ID_SUCURSAL, ID_ESTADO
        FROM FIDE_PRODUCTO_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_PRODUCTO, NOMBRE, DESCRIPCION, ID_CATEGORIA, ID_SUCURSAL, ID_ESTADO
        FROM FIDE_PRODUCTO_TB
        WHERE ID_PRODUCTO = P_ID_PRODUCTO;
    END IF;
END FIDE_PRODUCTO_TB_OBTENER_SP;


--Actualizar FIDE_PRODUCTO_TB
PROCEDURE FIDE_PRODUCTO_TB_ACTUALIZAR_SP (
    p_ID_PRODUCTO IN NUMBER,
    p_NOMBRE IN VARCHAR2,
    p_DESCRIPCION IN VARCHAR2,
    p_ID_CATEGORIA IN NUMBER,
    p_ID_SUCURSAL IN NUMBER,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    UPDATE FIDE_PRODUCTO_TB
    SET
        NOMBRE = p_NOMBRE,
        DESCRIPCION = p_DESCRIPCION,
        ID_CATEGORIA = p_ID_CATEGORIA,
        ID_SUCURSAL = p_ID_SUCURSAL,
        ID_ESTADO = p_ID_ESTADO
    WHERE
        ID_PRODUCTO = p_ID_PRODUCTO;
    COMMIT;
END FIDE_PRODUCTO_TB_ACTUALIZAR_SP;


--Insertar FIDE_TIPO_RESERVA
PROCEDURE FIDE_TIPO_RESERVA_TB_INSERTAR_SP (
    p_ID_TIPO_RESERVA IN NUMBER,
    p_NOMBRE IN VARCHAR2,
    p_DESCRIPCION IN VARCHAR2,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_TIPO_RESERVA_TB (
        ID_TIPO_RESERVA,
        NOMBRE,
        DESCRIPCION,
        ID_ESTADO
    ) VALUES (
        p_ID_TIPO_RESERVA,
        p_NOMBRE,
        p_DESCRIPCION,
        p_ID_ESTADO
    );
    COMMIT;
END FIDE_TIPO_RESERVA_TB_INSERTAR_SP;


--Obtener Tipo de reserva
PROCEDURE FIDE_TIPO_RESERVA_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_TIPO_RESERVA IN FIDE_TIPO_RESERVA_TB.ID_TIPO_RESERVA%TYPE
) AS
BEGIN
    IF P_ID_TIPO_RESERVA IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_TIPO_RESERVA, NOMBRE, DESCRIPCION, ID_ESTADO
        FROM FIDE_TIPO_RESERVA_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_TIPO_RESERVA, NOMBRE, DESCRIPCION, ID_ESTADO
        FROM FIDE_TIPO_RESERVA_TB
        WHERE ID_TIPO_RESERVA = P_ID_TIPO_RESERVA;
    END IF;
END FIDE_TIPO_RESERVA_TB_OBTENER_SP;


--Actualizar FIDE_TIPO_RESERVA
PROCEDURE FIDE_TIPO_RESERVA_TB_ACTUALIZAR_SP (
    p_ID_TIPO_RESERVA IN NUMBER,
    p_NOMBRE IN VARCHAR2,
    p_DESCRIPCION IN VARCHAR2,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    UPDATE FIDE_TIPO_RESERVA_TB
    SET
        NOMBRE = p_NOMBRE,
        DESCRIPCION = p_DESCRIPCION,
        ID_ESTADO = p_ID_ESTADO
    WHERE
        ID_TIPO_RESERVA = p_ID_TIPO_RESERVA;
    COMMIT;
END FIDE_TIPO_RESERVA_TB_ACTUALIZAR_SP;


-- FIDE_TIPO_HABITACION_TB
--INSERTAR FIDE_TIPO_HABITACION_TB
PROCEDURE FIDE_TIPO_HABITACION_TB_INSERTAR_SP (
    p_DESCRIPCION IN VARCHAR2,
    p_PRECIO IN NUMBER,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_TIPO_HABITACION_TB (
        DESCRIPCION,
        PRECIO,
        ID_ESTADO
    ) VALUES (
        p_DESCRIPCION,
        p_PRECIO,
        p_ID_ESTADO
    );
    COMMIT;
END FIDE_TIPO_HABITACION_TB_INSERTAR_SP;


--Obtener FIDE_TIPO_HABITACION_TB
PROCEDURE FIDE_TIPO_HABITACION_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_TIPO_HABITACION IN FIDE_TIPO_HABITACION_TB.ID_TIPO_HABITACION%TYPE
) AS
BEGIN
    IF P_ID_TIPO_HABITACION IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_TIPO_HABITACION, DESCRIPCION, PRECIO, ID_ESTADO
        FROM FIDE_TIPO_HABITACION_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_TIPO_HABITACION, DESCRIPCION, PRECIO, ID_ESTADO
        FROM FIDE_TIPO_HABITACION_TB
        WHERE ID_TIPO_HABITACION = P_ID_TIPO_HABITACION;
    END IF;
END FIDE_TIPO_HABITACION_TB_OBTENER_SP;


--Actualizar FIDE_TIPO_HABITACION_TB
PROCEDURE FIDE_TIPO_HABITACION_TB_ACTUALIZAR_SP (
    p_ID_TIPO_HABITACION IN NUMBER,
    p_DESCRIPCION IN VARCHAR2,
    p_PRECIO IN NUMBER,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    UPDATE FIDE_TIPO_HABITACION_TB
    SET
        DESCRIPCION = p_DESCRIPCION,
        PRECIO = p_PRECIO,
        ID_ESTADO = p_ID_ESTADO
    WHERE
        ID_TIPO_HABITACION = p_ID_TIPO_HABITACION;
    COMMIT;
END FIDE_TIPO_HABITACION_TB_ACTUALIZAR_SP;


--FIDE_HABITACION_TB
--Insertar FIDE_HABITACION_TB
PROCEDURE FIDE_HABITACION_TB_INSERTAR_SP (
    p_ID_HABITACION IN VARCHAR2,
    p_ID_TIPO_HABITACION IN NUMBER,
    p_ID_SUCURSAL IN NUMBER,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_HABITACION_TB (
        ID_HABITACION,
        ID_TIPO_HABITACION,
        ID_SUCURSAL,
        ID_ESTADO
    ) VALUES (
        p_ID_HABITACION,
        p_ID_TIPO_HABITACION,
        p_ID_SUCURSAL,
        p_ID_ESTADO
    );
    COMMIT;
END FIDE_HABITACION_TB_INSERTAR_SP;


--Obtener FIDE_HABITACION_TB
PROCEDURE FIDE_HABITACION_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_ID_HABITACION IN FIDE_HABITACION_TB.ID_HABITACION%TYPE
) AS
BEGIN
    IF P_ID_HABITACION IS NULL THEN
        OPEN p_resultado FOR
        SELECT ID_HABITACION, ID_TIPO_HABITACION, ID_SUCURSAL, ID_ESTADO
        FROM FIDE_HABITACION_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT ID_HABITACION, ID_TIPO_HABITACION, ID_SUCURSAL, ID_ESTADO
        FROM FIDE_HABITACION_TB
        WHERE ID_HABITACION = P_ID_HABITACION;
    END IF;
END FIDE_HABITACION_TB_OBTENER_SP;


--Actualizar FIDE_HABITACION_TB
PROCEDURE FIDE_HABITACION_TB_ACTUALIZAR_SP (
    p_ID_HABITACION IN VARCHAR2,
    p_ID_TIPO_HABITACION IN NUMBER,
    p_ID_SUCURSAL IN NUMBER,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    UPDATE FIDE_HABITACION_TB
    SET
        ID_TIPO_HABITACION = p_ID_TIPO_HABITACION,
        ID_SUCURSAL = p_ID_SUCURSAL,
        ID_ESTADO = p_ID_ESTADO
    WHERE
        ID_HABITACION = p_ID_HABITACION;
    COMMIT;
END FIDE_HABITACION_TB_ACTUALIZAR_SP;


--FIDE_RESERVA_TB
-- Insertar FIDE_RESERVA_TB
PROCEDURE FIDE_RESERVA_TB_INSERTAR_SP(
    p_NUM_RESERVA     IN NUMBER,
    p_ID_CLIENTE      IN NUMBER,
    p_ID_HABITACION   IN VARCHAR2,
    p_FECHA_RESERVADO IN DATE,
    p_ID_TIPO_RESERVA IN NUMBER,
    p_ID_ESTADO       IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_RESERVA_TB (
        NUM_RESERVA, ID_CLIENTE, ID_HABITACION, FECHA_RESERVADO, ID_TIPO_RESERVA, ID_ESTADO
    ) VALUES (
        p_NUM_RESERVA, p_ID_CLIENTE, p_ID_HABITACION, p_FECHA_RESERVADO, p_ID_TIPO_RESERVA, p_ID_ESTADO
    );
END FIDE_RESERVA_TB_INSERTAR_SP;


-- Obtener FIDE_RESERVA_TB
PROCEDURE FIDE_RESERVA_TB_OBTENER_SP(
    p_resultado OUT SYS_REFCURSOR,--"NUM_RESERVA", "ID_CLIENTE", "ID_HABITACION"
    P_NUM_RESERVA IN FIDE_RESERVA_TB.NUM_RESERVA%TYPE,
    P_ID_CLIENTE IN FIDE_RESERVA_TB.ID_CLIENTE%TYPE,
    P_ID_HABITACION IN FIDE_RESERVA_TB.ID_HABITACION%TYPE
) AS
BEGIN
    IF P_NUM_RESERVA IS NULL
    OR P_ID_CLIENTE IS NULL
    OR P_ID_HABITACION IS NULL THEN
        OPEN p_resultado FOR
        SELECT NUM_RESERVA, ID_CLIENTE, ID_HABITACION, FECHA_RESERVADO, ID_TIPO_RESERVA, ID_ESTADO
        FROM FIDE_RESERVA_TB;
    ELSE 
        OPEN p_resultado FOR
        SELECT NUM_RESERVA, ID_CLIENTE, ID_HABITACION, FECHA_RESERVADO, ID_TIPO_RESERVA, ID_ESTADO
        FROM FIDE_RESERVA_TB
        WHERE NUM_RESERVA = P_NUM_RESERVA
        AND ID_CLIENTE = P_ID_CLIENTE
        AND ID_HABITACION = P_ID_HABITACION;
    END IF;
END FIDE_RESERVA_TB_OBTENER_SP;


-- Actualizar FIDE_RESERVA_TB
PROCEDURE FIDE_RESERVA_TB_ACTUALIZAR_SP(
    p_NUM_RESERVA     IN NUMBER,
    p_ID_CLIENTE      IN NUMBER,
    p_ID_HABITACION   IN VARCHAR2,
    p_FECHA_RESERVADO IN DATE,
    p_ID_TIPO_RESERVA IN NUMBER,
    p_ID_ESTADO       IN NUMBER
) AS
BEGIN
    UPDATE FIDE_RESERVA_TB
    SET FECHA_RESERVADO = p_FECHA_RESERVADO,
        ID_TIPO_RESERVA = p_ID_TIPO_RESERVA,
        ID_ESTADO       = p_ID_ESTADO
    WHERE NUM_RESERVA = p_NUM_RESERVA
      AND ID_CLIENTE = p_ID_CLIENTE
      AND ID_HABITACION = p_ID_HABITACION;
END FIDE_RESERVA_TB_ACTUALIZAR_SP;



--FIDE_DETALLE_FACTURA_TB
--Insertar FIDE_DETALLE_FACTURA_TB
PROCEDURE FIDE_DETALLE_FACTURA_TB_INSERTAR_SP (
    p_NUM_DETALLE_FACTURA IN VARCHAR2,
    p_NUM_RESERVA IN NUMBER,
    p_ID_CLIENTE IN NUMBER,
    p_ID_HABITACION IN VARCHAR2,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_DETALLE_FACTURA_TB (
        NUM_DETALLE_FACTURA,
        NUM_RESERVA,
        ID_CLIENTE,
        ID_HABITACION,
        ID_ESTADO
    ) VALUES (
        p_NUM_DETALLE_FACTURA,
        p_NUM_RESERVA,
        p_ID_CLIENTE,
        p_ID_HABITACION,
        p_ID_ESTADO
    );
END FIDE_DETALLE_FACTURA_TB_INSERTAR_SP;


--Obtener FIDE_DETALLE_FACTURA_TB
PROCEDURE FIDE_DETALLE_FACTURA_TB_OBTENER_SP (--"NUM_DETALLE_FACTURA", "NUM_RESERVA", "ID_CLIENTE", "ID_HABITACION"
    p_resultado OUT SYS_REFCURSOR,
    P_NUM_DETALLE_FACTURA IN FIDE_DETALLE_FACTURA_TB.NUM_DETALLE_FACTURA%TYPE,
    P_NUM_RESERVA IN FIDE_DETALLE_FACTURA_TB.NUM_RESERVA%TYPE,
    P_ID_CLIENTE IN FIDE_DETALLE_FACTURA_TB.ID_CLIENTE%TYPE,
    P_ID_HABITACION IN FIDE_DETALLE_FACTURA_TB.ID_HABITACION%TYPE
) AS
BEGIN
    IF P_NUM_DETALLE_FACTURA IS NULL
    OR P_NUM_RESERVA IS NULL
    OR P_ID_CLIENTE IS NULL
    OR P_ID_HABITACION IS NULL THEN
        OPEN p_resultado FOR
        SELECT NUM_DETALLE_FACTURA, NUM_RESERVA, ID_CLIENTE, ID_HABITACION, ID_ESTADO
        FROM FIDE_DETALLE_FACTURA_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT NUM_DETALLE_FACTURA, NUM_RESERVA, ID_CLIENTE, ID_HABITACION, ID_ESTADO
        FROM FIDE_DETALLE_FACTURA_TB
        WHERE NUM_DETALLE_FACTURA = P_NUM_DETALLE_FACTURA
        AND NUM_RESERVA = P_NUM_RESERVA
        AND ID_CLIENTE = P_ID_CLIENTE
        AND ID_HABITACION = P_ID_HABITACION;
    END IF;
END FIDE_DETALLE_FACTURA_TB_OBTENER_SP;



--Actualizar FIDE_DETALLE_FACTURA_TB
PROCEDURE FIDE_DETALLE_FACTURA_TB_ACTUALIZAR_SP (
    p_NUM_DETALLE_FACTURA IN VARCHAR2,
    p_NUM_RESERVA IN NUMBER,
    p_ID_CLIENTE IN NUMBER,
    p_ID_HABITACION IN VARCHAR2,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    UPDATE FIDE_DETALLE_FACTURA_TB
    SET ID_ESTADO = p_ID_ESTADO
    WHERE NUM_DETALLE_FACTURA = p_NUM_DETALLE_FACTURA
      AND NUM_RESERVA = p_NUM_RESERVA
      AND ID_CLIENTE = p_ID_CLIENTE
      AND ID_HABITACION = p_ID_HABITACION;
END FIDE_DETALLE_FACTURA_TB_ACTUALIZAR_SP;


--FIDE_FACTURA_TB
--Insertar FIDE_FACTURA_TB
PROCEDURE FIDE_FACTURA_TB_INSERTAR_SP (
    p_NUM_FACTURA         IN VARCHAR2,
    p_ID_CLIENTE          IN NUMBER,
    p_ID_EMPLEADO         IN NUMBER,
    p_NUM_DETALLE_FACTURA IN VARCHAR2,
    p_NUM_RESERVA         IN NUMBER,
    p_ID_HABITACION       IN VARCHAR2,
    p_TOTAL               IN NUMBER,
    p_ID_ESTADO           IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_FACTURA_TB (
        NUM_FACTURA, ID_CLIENTE, ID_EMPLEADO, NUM_DETALLE_FACTURA,
        NUM_RESERVA, ID_HABITACION, TOTAL, ID_ESTADO
    )
    VALUES (
        p_NUM_FACTURA, p_ID_CLIENTE, p_ID_EMPLEADO, p_NUM_DETALLE_FACTURA,
        p_NUM_RESERVA, p_ID_HABITACION, p_TOTAL, p_ID_ESTADO
    );
END FIDE_FACTURA_TB_INSERTAR_SP;


--Obtener FIDE_FACTURA_TB
PROCEDURE FIDE_FACTURA_TB_OBTENER_SP (--"NUM_FACTURA", "ID_CLIENTE", "ID_EMPLEADO", "NUM_DETALLE_FACTURA"
    p_resultado OUT SYS_REFCURSOR,
    P_NUM_FACTURA IN FIDE_FACTURA_TB.NUM_FACTURA%TYPE,
    P_ID_CLIENTE IN FIDE_FACTURA_TB.ID_CLIENTE%TYPE,
    P_ID_EMPELADO IN FIDE_FACTURA_TB.ID_EMPLEADO%TYPE,
    P_NUM_DETALLE_FACTURA IN FIDE_FACTURA_TB.NUM_DETALLE_FACTURA%TYPE
) AS
BEGIN
    IF P_NUM_FACTURA IS NULL
    OR P_ID_CLIENTE IS NULL
    OR P_ID_EMPELADO IS NULL
    OR P_NUM_DETALLE_FACTURA IS NULL THEN
        OPEN p_resultado FOR
        SELECT NUM_FACTURA, ID_CLIENTE, ID_EMPLEADO, NUM_DETALLE_FACTURA,
               NUM_RESERVA, ID_HABITACION, TOTAL, ID_ESTADO
        FROM FIDE_FACTURA_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT NUM_FACTURA, ID_CLIENTE, ID_EMPLEADO, NUM_DETALLE_FACTURA,
               NUM_RESERVA, ID_HABITACION, TOTAL, ID_ESTADO
        FROM FIDE_FACTURA_TB
        WHERE NUM_FACTURA = P_NUM_FACTURA
        AND ID_CLIENTE = P_ID_CLIENTE
        AND ID_EMPLEADO = P_ID_EMPELADO
        AND NUM_DETALLE_FACTURA = P_NUM_DETALLE_FACTURA;
    END IF;
END FIDE_FACTURA_TB_OBTENER_SP;


--Actualizar FIDE_FACTURA_TB
PROCEDURE FIDE_FACTURA_TB_ACTUALIZAR_SP (
    p_NUM_FACTURA         IN VARCHAR2,
    p_ID_CLIENTE          IN NUMBER,
    p_ID_EMPLEADO         IN NUMBER,
    p_NUM_DETALLE_FACTURA IN VARCHAR2,
    p_NUM_RESERVA         IN NUMBER,
    p_ID_HABITACION       IN VARCHAR2,
    p_TOTAL               IN NUMBER,
    p_ID_ESTADO           IN NUMBER
) AS
BEGIN
    UPDATE FIDE_FACTURA_TB
    SET NUM_RESERVA   = p_NUM_RESERVA,
        ID_HABITACION = p_ID_HABITACION,
        TOTAL         = p_TOTAL,
        ID_ESTADO     = p_ID_ESTADO
    WHERE NUM_FACTURA = p_NUM_FACTURA
      AND ID_CLIENTE  = p_ID_CLIENTE
      AND ID_EMPLEADO = p_ID_EMPLEADO
      AND NUM_DETALLE_FACTURA = p_NUM_DETALLE_FACTURA;
END FIDE_FACTURA_TB_ACTUALIZAR_SP;


--FIDE_DETALLE_SERVICIO_TB
--Insertar FIDE_DETALLE_SERVICIO_TB
PROCEDURE FIDE_DETALLE_SERVICIO_TB_INSERTAR_SP (
    p_NUM_DETALLE_SERVICIO IN VARCHAR2,
    p_DESCRIPCION          IN VARCHAR2,
    p_PRECIO               IN NUMBER,
    p_ID_ESTADO            IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_DETALLE_SERVICIO_HABITACION_TB (
        NUM_DETALLE_SERVICIO, DESCRIPCION, PRECIO, ID_ESTADO
    )
    VALUES (
        p_NUM_DETALLE_SERVICIO, p_DESCRIPCION, p_PRECIO, p_ID_ESTADO
    );
END FIDE_DETALLE_SERVICIO_TB_INSERTAR_SP;


--Obtener FIDE_DETALLE_SERVICIO_TB
PROCEDURE FIDE_DETALLE_SERVICIO_TB_OBTENER_SP (
    p_resultado OUT SYS_REFCURSOR,
    P_NUM_DETALLE_SERVICIO IN FIDE_DETALLE_SERVICIO_HABITACION_TB.NUM_DETALLE_SERVICIO%TYPE
) AS
BEGIN
    IF P_NUM_DETALLE_SERVICIO IS NULL THEN
        OPEN p_resultado FOR
        SELECT NUM_DETALLE_SERVICIO, DESCRIPCION, PRECIO, ID_ESTADO
        FROM FIDE_DETALLE_SERVICIO_HABITACION_TB;
    ELSE
        OPEN p_resultado FOR
        SELECT NUM_DETALLE_SERVICIO, DESCRIPCION, PRECIO, ID_ESTADO
        FROM FIDE_DETALLE_SERVICIO_HABITACION_TB
        WHERE NUM_DETALLE_SERVICIO = P_NUM_DETALLE_SERVICIO;
    END IF;
END FIDE_DETALLE_SERVICIO_TB_OBTENER_SP;



--Actualizar FIDE_DETALLE_SERVICIO_TB
PROCEDURE FIDE_DETALLE_SERVICIO_TB_ACTUALIZAR_SP (
    p_NUM_DETALLE_SERVICIO IN VARCHAR2,
    p_DESCRIPCION          IN VARCHAR2,
    p_PRECIO               IN NUMBER,
    p_ID_ESTADO            IN NUMBER
) AS
BEGIN
    UPDATE FIDE_DETALLE_SERVICIO_HABITACION_TB
    SET DESCRIPCION = p_DESCRIPCION,
        PRECIO = p_PRECIO,
        ID_ESTADO = p_ID_ESTADO
    WHERE NUM_DETALLE_SERVICIO = p_NUM_DETALLE_SERVICIO;
END FIDE_DETALLE_SERVICIO_TB_ACTUALIZAR_SP;



--FIDE_SERVICIO_HABITACION_TB
--Insertar FIDE_SERVICIO_HABITACION_TB
PROCEDURE FIDE_SERVICIO_HABITACION_TB_INSERTAR_SP (
    p_NUM_SERVICIO_HABITACION IN VARCHAR2,
    p_ID_CLIENTE IN NUMBER,
    p_ID_HABITACION IN VARCHAR2,
    p_NUM_DETALLE_SERVICIO IN VARCHAR2,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    INSERT INTO FIDE_SERVICIO_HABITACION_TB (
        NUM_SERVICIO_HABITACION, ID_CLIENTE, ID_HABITACION, NUM_DETALLE_SERVICIO, ID_ESTADO
    ) 
    VALUES (
        p_NUM_SERVICIO_HABITACION, p_ID_CLIENTE, p_ID_HABITACION, p_NUM_DETALLE_SERVICIO, p_ID_ESTADO
    );
    
    COMMIT;
END FIDE_SERVICIO_HABITACION_TB_INSERTAR_SP;


--Obtener FIDE_SERVICIO_HABITACION_TB
PROCEDURE FIDE_SERVICIO_HABITACION_TB_OBTENER_SP (
    p_RESULTADO OUT SYS_REFCURSOR,
    P_NUM_SERVICIO_HABITACION IN FIDE_SERVICIO_HABITACION_TB.NUM_SERVICIO_HABITACION%TYPE,
    p_ID_CLIENTE IN NUMBER,
    p_ID_HABITACION IN VARCHAR2,
    P_NUM_DETALLE_SERVICIO IN FIDE_SERVICIO_HABITACION_TB.NUM_DETALLE_SERVICIO%TYPE    
) AS
BEGIN
    IF P_NUM_SERVICIO_HABITACION IS NULL
    OR p_ID_CLIENTE IS NULL
    OR p_ID_HABITACION IS NULL
    OR P_NUM_DETALLE_SERVICIO IS NULL THEN
        OPEN p_RESULTADO FOR
        SELECT NUM_SERVICIO_HABITACION, ID_CLIENTE, ID_HABITACION, NUM_DETALLE_SERVICIO, ID_ESTADO
        FROM FIDE_SERVICIO_HABITACION_TB;
    ELSE
        OPEN p_RESULTADO FOR
        SELECT NUM_SERVICIO_HABITACION, ID_CLIENTE, ID_HABITACION, NUM_DETALLE_SERVICIO, ID_ESTADO
        FROM FIDE_SERVICIO_HABITACION_TB
        WHERE NUM_SERVICIO_HABITACION = P_NUM_SERVICIO_HABITACION
        AND ID_CLIENTE = p_ID_CLIENTE
        AND ID_HABITACION = p_ID_HABITACION
        AND NUM_DETALLE_SERVICIO = P_NUM_DETALLE_SERVICIO;
    END IF;
END FIDE_SERVICIO_HABITACION_TB_OBTENER_SP;



--Actualizar FIDE_SERVICIO_HABITACION_TB
PROCEDURE FIDE_SERVICIO_HABITACION_TB_ACTUALIZAR_SP (
    p_NUM_SERVICIO_HABITACION IN VARCHAR2,
    p_ID_CLIENTE IN NUMBER,
    p_ID_HABITACION IN VARCHAR2,
    p_NUM_DETALLE_SERVICIO IN VARCHAR2,
    p_ID_ESTADO IN NUMBER
) AS
BEGIN
    UPDATE FIDE_SERVICIO_HABITACION_TB
    SET 
        NUM_SERVICIO_HABITACION = p_NUM_SERVICIO_HABITACION,
        ID_CLIENTE = p_ID_CLIENTE,
        ID_HABITACION = p_ID_HABITACION,
        NUM_DETALLE_SERVICIO = p_NUM_DETALLE_SERVICIO,
        ID_ESTADO = p_ID_ESTADO
    WHERE NUM_SERVICIO_HABITACION = p_NUM_SERVICIO_HABITACION
      AND ID_CLIENTE = p_ID_CLIENTE
      AND ID_HABITACION = p_ID_HABITACION
      AND NUM_DETALLE_SERVICIO = p_NUM_DETALLE_SERVICIO;

    COMMIT;
END FIDE_SERVICIO_HABITACION_TB_ACTUALIZAR_SP;


END FIDE_PAQUETE;